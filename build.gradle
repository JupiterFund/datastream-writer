plugins {
  id 'java'
  id 'application'
  id 'org.springframework.boot' version '2.1.7.RELEASE'
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

version = '0.0.2'

compileJava.options.encoding = 'UTF-8' 
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

allprojects {
  repositories {
    maven {
      url "https://jitpack.io"
    }
  }
}

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter'
  // 使用Log4j2 + Sl4j
  implementation 'org.springframework.boot:spring-boot-starter-log4j2'
  implementation 'org.springframework.kafka:spring-kafka:2.2.5.RELEASE'
  implementation 'org.apache.commons:commons-csv:1.6'
  // YAML配置文件
  implementation 'com.fasterxml.jackson.core:jackson-databind'
  implementation 'com.fasterxml.jackson.core:jackson-core'
  implementation 'com.fasterxml.jackson.core:jackson-annotations'
  implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
  // Parquet相关
  implementation 'org.apache.parquet:parquet-protobuf:1.10.1'
  implementation('org.apache.hadoop:hadoop-common:2.7.0') {
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
  }
  // 自动POJO生成
  compileOnly 'org.projectlombok:lombok:1.18.8'
  annotationProcessor 'org.projectlombok:lombok:1.18.8'
  // Jupiter依赖
  implementation 'com.github.JupiterFund:jupiter-commons:master-SNAPSHOT'
  implementation 'com.github.JupiterFund:jupiterapis:master-SNAPSHOT'

  // 测试依赖
  testImplementation 'junit:junit:4.12'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
  all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    // Module hadoop-lzo is not required for this tool, 
    // so that exclude this module for avoiding dependency error
    exclude group: 'com.hadoop.gplcompression', module: 'hadoop-lzo'
  }
}

application {
  mainClassName = 'com.nodeunify.jupiter.datastream.writer.App'
}
